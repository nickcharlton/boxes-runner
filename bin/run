#!/usr/bin/env ruby

begin
  require "bundler/setup"
rescue LoadError
  puts "You must `gem install bundler` and `bundle install` to run this."
end

require "atlas"
require "boxes/version"

def die(message = nil)
  $stderr.puts("#{$PROGRAM_NAME} failed with code: #{$CHILD_STATUS}")
  $stderr.puts(message) if message
  exit 1
end

# ensure we know which to build
die("box arguments must be provided") unless ARGV.length == 3

$stdout.sync = true # always write output without buffering

# collect everything we need
start_time = ENV["BOXES_START_TIME"] || Time.now.utc
atlas_user = ENV["ATLAS_USER"] || "boxesio"
box_name = ARGV[0]
box_template = ARGV[1]
box_scripts = ARGV[2]
box_version = "#{Boxes::VERSION}.#{start_time.strftime('%Y%m%d%H%M%S')}"
providers = %w(virtualbox vmware)

# run a build for each provider
providers.each do |provider|
  puts "Starting build for: #{box_name}-#{provider}..."

  system("bundle exec boxes build --name=#{box_name}-#{provider} "\
         "--template=#{box_template} --provider=#{provider} "\
         "--scripts=#{box_scripts}") ||
    die("Unable to build: #{box_name}-#{provider}")
end

# setup Atlas and upload them
Atlas.configure do |config|
  config.access_token = ENV["ATLAS_TOKEN"] || ""
end

puts "Fetching box details from Atlas..."
box = Atlas::Box.find("#{atlas_user}/#{box_name}")

puts "Creating version: #{box_version}..."
version = box.create_version(version: box_version)

# create new providers for each provider
providers.each do |name|
  file = File.open("#{box_name}-#{name}.box")
  provider_name = name == "vmware" ? "vmware_desktop" : name

  puts "Creating provider: #{provider_name}..."
  provider = version.create_provider(name: provider_name)

  puts "Uploading..."
  begin
    provider.upload(file)
  rescue Atlas::Errors::TimeoutError
    puts "Failed to upload, trying again..."

    provider.upload(file)
  end

  file.close
end

# release the version
puts "Releasing version..."
version.release

# and done
puts "Run complete."
puts "Built #{box_name} (#{providers.join(' ')}) successfully."
